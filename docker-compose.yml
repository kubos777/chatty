services:
  # PostgreSQL para persistencia
  postgres:
    image: postgres:15
    container_name: chat-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat-network
    restart: unless-stopped

  # Redis para WebSockets y cache
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend (FastAPI + WebSockets)
  backend:
    image: python:3.13-slim
    container_name: chat-backend
    ports:
      - "8000:8000"
    working_dir: /app
    volumes:
      - ./backend:/app
      - backend_cache:/root/.cache
    environment:
      - DATABASE_URL=postgresql://chatuser:chatpass123@postgres:5432/chatdb
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    networks:
      - chat-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: |
      bash -c "
        apt-get update -qq &&
        apt-get install -y curl &&
        pip install --no-cache-dir uv &&
        uv sync --no-cache &&
        echo '=== Verificando python-socketio ===' &&
        uv run python -c 'import socketio; print(\"socketio imported successfully\")' &&
        echo '=== Verificando FastAPI ===' &&
        uv run python -c 'import fastapi; print(\"fastapi imported successfully\")' &&
        echo '=== Ejecutando servidor ===' &&
        uv run python main.py
      "

  # Frontend (React + Vite)
  frontend:
    image: node:22-alpine 
    container_name: chat-frontend
    ports:
      - "5173:5173"
    working_dir: /app
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    networks:
      - chat-network
    depends_on:
      - backend
    restart: unless-stopped
    command: |
      sh -c "
        npm install &&
        npm run dev -- --host 0.0.0.0 --port 5173
      "

volumes:
  postgres_data:
  redis_data:
  backend_cache:
  node_modules:

networks:
  chat-network:
    driver: bridge